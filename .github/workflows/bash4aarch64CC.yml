
name: bash4armCC

on:
  # Run every Monday at 00:07 (to be a little off the peak time)
  # schedule:
  #   - cron: '7 0 * * 1'

  # Manual running enabled
  workflow_dispatch:

# Allow workflow to write to repository
permissions:
  contents: write

jobs:
  Cross-Compile:

    runs-on: ubuntu-latest
  
    steps:
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y gcc-aarch64-linux-gnu curl

      - name: Fetch latest bash version
        run: |
          version=$(curl -s https://ftp.gnu.org/gnu/bash/ | grep -o "bash-[0-9]\+\(\.[0-9]\+\)\{0,2\}\.tar\.gz" | grep -o '[0-9]\+\(\.[0-9]\+\)\{0,2\}' | sort -V | tail -1)
          echo "Latest bash version: $version"
          echo "BASH_VERSION=$version" >> $GITHUB_ENV

      - name: Download source code
        run: |
          curl -sO "https://ftp.gnu.org/gnu/bash/bash-${{ env.BASH_VERSION }}.tar.gz"
          tar -xzvf "bash-${{ env.BASH_VERSION }}.tar.gz"
          
      # Add step to verify checksum!

      - name: Build and compile for aarch64
        run: |
          cd "bash-${{ env.BASH_VERSION }}"
          export CC=aarch64-linux-gnu-gcc
          ./configure --host=aarch64-linux-gnu CFLAGS="-static" LDFLAGS="-static"
          make
      
      - name: Create release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: bash-${{ env.BASH_VERSION }}/bash # or just bash
          overwrite: true
          tag: bash v${{ env.BASH_VERSION }}

  #   steps:
  #     - name: Fetch latest Bash version
  #       run: |
  #         version=latest_version=$(curl -s https://ftp.gnu.org/gnu/bash/ | grep -oP 'bash-\K[0-9]+(\.[0-9]+){0,2}(?=\.tar\.gz)' | sort -V | tail -1)
  #         echo "Latest bash version: $version"
  #         echo "BASH_VERSION=$version" >> $GITHUB_ENV

  #     - name: Download source code
  #       run: |
  #         mkdir -p bash-src
  #         cd bash-src
  #         curl -O "https://ftp.gnu.org/gnu/bash/bash-${{ env.BASH_VERSION }}.tar.gz"
  #         tar -xzvf "bash-${{ env.BASH_VERSION }}.tar.gz"
  #         cd "bash-${{ env.BASH_VERSION }}"

  #     - name: Install dependencies
  #       run: apk add --update --no-cache --no-progress curl autoconf automake

  # Cross-Compile:
  #   runs-on: ubuntu-latest

  #   container:
  #     image: muslcc/x86-64:aarch64-linux-musl
  #     options: --user root

  #   steps:
  #     - name: Install dependencies
  #       run: |
  #         apk add --update --no-cache --no-progress bash perl make curl upx tar dpkg autoconf automake
  #         ./configure --host=aarch64-linux-musl --enable-static
  #         make

